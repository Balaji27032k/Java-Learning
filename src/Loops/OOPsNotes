Class
A class can be described as
    a custom data type
    a special code block that contains methods related to the class.

    A class is like an empty form that gets copied and handed out.
    it describes information or placeholders,for data that'll be filled in,when that form is given to a unique individual.
    The class may have a field for      the object will have a value in the
                                  name                                      name field,which will be unique to the object.
                                  address                                   address field
                                  etc.,
    The class may have a field for address,the object will have values for the address field and so on,.
    The process of copying the empty form and then delivering it to some process or person to fill in the blanks is a
a loose analogy to what happens when you create an object.
    The empty form(the class) is the template for the data to be collected.
    The populated form may be completly different each time,because of the values used to fill in the data.
    But the data being collected each time,is determined by the class or the form in this analogy.
Object
    An object is called an instance of a particular class.
    we call the creation of the object -> instantiation or instantiating a class.
    The class provides a shape or framework that describes the object being created.
    A template is another word you used when trying to describe a class's relationship to an object.

Declaring and instantiating a new object from a class
    The most common way to create an object , is to use the new keyword.
    The new keyword creates an instance and you can sometimes pass data,when creating an instance to setup data on that object.
    The String is special because we can create a String,just by using a literal which we've seen,
    String s = "Hello";
    But we could also use new:
    String s = new String("Hello");

static and instance fields
Static Field:
    Requires 'static' keyword when declared on the class
    Value fo the field is stored in special memory location and only in one place.
    Value is accessed by
    ClassName.fieldname
    Example: Integer.MAX_VALUE
Instance Field:
    Omits 'static' keyword when delcared on the class.
    Value of the field is not allocated any memory and has no value until the object is created.
    Value is accessed by ObjectVariable.fieldname
    Example: myObject.myFieldName(myObject is our variable name for an object we create and myFieldName is an attribute on the class.

    